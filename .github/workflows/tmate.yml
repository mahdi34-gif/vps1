name: Create VPS

on:
  workflow_dispatch:          # âœ… Manual "Run workflow" button
  repository_dispatch:        # âœ… Can still be triggered by API or other workflows
    types: [create-vps]

jobs:
  start-vps:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hours max

    steps:
      - name: â¬‡ï¸ Checkout
        uses: actions/checkout@v3

      - name: ðŸ“ Create dirs
        run: mkdir -p links .backup

      - name: ðŸ’¾ Restore backup
        run: |
          name="${{ github.event.client_payload.vps_name }}"
          if [ "${{ github.event.client_payload.backup }}" == "true" ]; then
            echo "ðŸ“¦ Restoring backup..."
            unzip ".backup/$name.zip" -d . || echo "âš ï¸ No backup to restore."
          fi

      - name: ðŸ” Start tmate session
        run: |
          echo "âš™ï¸ Launching tmate..."
          sudo apt update && sudo apt install -y tmate
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          SSH=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          echo "$SSH" > "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}.txt"
          echo "âœ… SSH Ready: $SSH"
          sleep 60  # give time for GitHub to sync

      - name: ðŸ“¦ Save backup
        run: |
          name="${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          zip -r ".backup/$name.zip" . -x ".git/*" ".github/*" ".backup/*" || true

      - name: ðŸ“¤ Push
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ðŸ” Updated SSH + backup for ${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          file_pattern: 'links/*.txt .backup/*.zip'

      - name: â³ Keep session alive
        run: |
          echo "â³ Keeping session alive for 6 hours..."
          sleep $((360 * 60))
